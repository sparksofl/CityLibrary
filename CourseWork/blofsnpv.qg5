using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Forms;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using Control = System.Windows.Controls.Control;
using KeyEventArgs = System.Windows.Input.KeyEventArgs;
using MenuItem = System.Windows.Controls.MenuItem;

namespace CourseWork
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            FillGivenBooks();
        }

        public static void FillGivenBooks()
        {
            var givenBooks = new List<LastBook>
            {
                new LastBook() {Title = "a", Date = "12.29"},
                new LastBook() {Title = "n", Date = "12.29"},
                new LastBook() {Title = "WEFDS", Date = "12.29"},
                new LastBook() {Title = "DSVFC", Date = "12.29"},
                new LastBook() {Title = "fg", Date = "12.29"},
                new LastBook() {Title = "dfgdfv", Date = "12.29"}
            };
        }

        private void DoQuery(object sender, RoutedEventArgs e)
        {
            try
            {
                // creating connection
                SqlConnection connection = Connection.CreateConnection();

                // query string from richTextBox
                string query = new TextRange(RichTextBox.Document.ContentStart, RichTextBox.Document.ContentEnd).Text;

                // creating command to perform
                SqlCommand command = new SqlCommand(query, connection);
                //command.ExecuteNonQuery();

                SqlDataAdapter adapter = new SqlDataAdapter(command);
                DataTable dataTable = new DataTable("CityLibrary");

                // dunno for what it
                adapter.Fill(dataTable);
                DataGrid.ItemsSource = dataTable.DefaultView;
                adapter.Update(dataTable);

                // it's necessary to always do it after proccessing DB.
                connection.Close();
                Connection.IsOpened = false;
            }

            catch (Exception ex)
            {
                ErrorTextBlock.Text = ex.Message;
                ErrorTextBlock.ToolTip = ex.Message;
            }
        }

        private void MenuClick(object sender, RoutedEventArgs e)
        {
            var menuItem = sender as MenuItem;
            if (menuItem == null) return;

            try
            {
                var currentItem = new TabItem();

                switch (menuItem.Name)
                {
                    case ("MLastActions"):
                        currentItem = TLastActions;
                        break;
                    case ("MGiveBook"):
                        currentItem = TGiveBook;
                        break;
                    case ("MTakeBackBook"):
                        currentItem = TTakeBackBook;
                        break;
                    case ("MEditing"):
                        currentItem = TEditing;
                        break;
                    case ("MQuery"):
                        currentItem = TQuery;
                        break;
                    case ("MStatistic"):
                        currentItem = TStatistic;
                        break;
                    case ("MReports"):
                        currentItem = TLastActions;
                        break;
                    case ("Exit"):
                        (new ExitWindow()).ShowDialog();
                        break;
                }
                currentItem.IsSelected = true;
                CurrentMenu.Text = currentItem.Header.ToString();
            }
            catch
            {
            }
        }

        private void Window_Closing(object sender, CancelEventArgs cancelEventArgs)
        {
            if (Connection.SqlConnection.State == ConnectionState.Open)
                Connection.SqlConnection.Close();

            cancelEventArgs.Cancel = true;
            (new ExitWindow()).ShowDialog();
        }

        private void ErrorTextBlock_KeyDown(object sender, KeyEventArgs e)
        {
            Control TB = sender as Control;
            //if ((this.OnPreviewStylusSystemGest) == Keys.Control)
        }

        private void MenuItem_OnClick(object sender, RoutedEventArgs e)
        {
            DataGrid.IsReadOnly = false;
        }
    }
}
